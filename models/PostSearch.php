<?php

namespace app\models;

//use Yii;
use yii\base\Model;
use yii\data\ActiveDataProvider;
//use app\models\Post;

/**
 * PostSearch represents the model behind the search form about `app\models\Post`.
 */
class PostSearch extends Post
{
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id', 'user_id', 'categories_id'], 'integer'],
            [['caption',  'City', 'event_id', 'description', 'fotoDescr', 'videoDescr', 'map'], 'safe'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function scenarios()
    {
        // bypass scenarios() implementation in the parent class
        return Model::scenarios();
    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params, $categoryId = null)
    {
        $query = Post::find();

//         add conditions that should always apply here

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 5,
            ],
        ]);

        $this->load($params);

        if (!$this->validate()) {
            // uncomment the following line if you do not want to return any records when validation fails
            // $query->where('0=1');
            return $dataProvider;
        }

        // grid filtering conditions
        $query->andFilterWhere([
            'id' => $this->id,
            'user_id' => $this->user_id,
            'categories_id' => $categoryId,
        ]);

        $query
            ->andFilterWhere(['like', 'caption', $this->caption])
            ->andFilterWhere(['like', 'city', $this->city])
            ->andFilterWhere(['like', 'event_id', $this->event_id])
            ->andFilterWhere(['like', 'description', $this->description])
            ->andFilterWhere(['like', 'fotoDescr', $this->fotoDescr])
            ->andFilterWhere(['like', 'videoDescr', $this->videoDescr])
            ->andFilterWhere(['like', 'map', $this->map]);

        return $dataProvider;
    }

    public function validate($attributeNames = null, $clearErrors = true)
    {
        // todo: Предварительно проверить чтобы в форме был хотя бы один критерий поиска
        // todo: если не введено не одного критерия поиска выводи false
//        if(!empty($_POST['post'])){
//            return true;
//        }else{
//            return false;
//        }
        $scenarios = $this->scenarios();
        $scenario = $this->getScenario();


        return parent::validate($attributeNames, $clearErrors); // TODO: Change the autogenerated stub
    }

}
